#!/usr/bin/env python
# encoding: utf-8
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# The code is based on an original idea of Reinout van Weeren
from factor._version import __version__ as version
from factor import process
import optparse
import sys


if __name__ == '__main__':
    parser = optparse.OptionParser(usage='%prog parset',
            version='%%prog %s' % (version))
    parser.add_option('-q', help='enable quiet mode', action='store_true', default=False)
    parser.add_option('-e', '--export', help='comma-separated list of sectors for which '
        'to export visibilities (e.g., "-r sector_1,sector_3")', type=str, default=None)
    parser.add_option('-c', help='correct exported visibilities for center of sector?',
        action='store_true', default=False)
    parser.add_option('-v', help='enable verbose mode', action='store_true', default=False)
    (options, args) = parser.parse_args()

    if len(args) != 1:
        parser.print_help()
        sys.exit()

    parset_file = args[0]

    # Prepare logger
    if options.q:
        logging_level = 'warning'
    elif options.v:
        logging_level = 'debug'
    else:
        logging_level = 'info'

    # Construct list of directions and operations to reset
    if options.export is not None:
        parts = options.export.split(',')
        sectors_to_export = [p.strip() for p in parts]
    else:
        sectors_to_export = []

    # Process the field
    process.run(parset_file, logging_level=logging_level, sectors_to_export=sectors_to_export,
                export_corrected_data=options.c)
